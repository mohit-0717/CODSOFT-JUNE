import json
import os

CONTACTS_FILE = "contacts.json"

def load_contacts():
    if os.path.exists(CONTACTS_FILE):
        with open(CONTACTS_FILE, 'r') as file:
            try:
                return json.load(file)
            except json.JSONDecodeError:
                return []
    return []

def save_contacts(contacts):
    with open(CONTACTS_FILE, 'w') as file:
        json.dump(contacts, file, indent=4)

def add_contact(contacts):
    name = input("Enter Name: ")
    phone = input("Enter Phone: ")
    email = input("Enter Email: ")
    address = input("Enter Address: ")

    contact = {"name": name, "phone": phone, "email": email, "address": address}
    contacts.append(contact)
    save_contacts(contacts)
    print(f"‚úÖ Contact '{name}' added successfully.")

def view_contacts(contacts):
    if not contacts:
        print("üì≠ No contacts found.")
        return
    print("\nüìñ --- Contact List ---")
    for idx, contact in enumerate(contacts, start=1):
        print(f"{idx}. {contact['name']} | {contact['phone']} | {contact['email']} | {contact['address']}")
    print("-----------------------")

def search_contact(contacts):
    keyword = input("Enter name or phone to search: ").lower()
    found = [c for c in contacts if keyword in c['name'].lower() or keyword in c['phone']]
    
    if found:
        print("\nüîç Matching Contacts:")
        for c in found:
            print(f"{c['name']} | {c['phone']} | {c['email']} | {c['address']}")
    else:
        print("‚ùå No matching contact found.")

def update_contact(contacts):
    view_contacts(contacts)
    try:
        idx = int(input("Enter the number of the contact to update: ")) - 1
        if 0 <= idx < len(contacts):
            print("Leave blank to keep previous value.")
            contacts[idx]['name'] = input(f"New Name [{contacts[idx]['name']}]: ") or contacts[idx]['name']
            contacts[idx]['phone'] = input(f"New Phone [{contacts[idx]['phone']}]: ") or contacts[idx]['phone']
            contacts[idx]['email'] = input(f"New Email [{contacts[idx]['email']}]: ") or contacts[idx]['email']
            contacts[idx]['address'] = input(f"New Address [{contacts[idx]['address']}]: ") or contacts[idx]['address']
            save_contacts(contacts)
            print("‚úÖ Contact updated successfully.")
        else:
            print("‚ùå Invalid contact number.")
    except ValueError:
        print("‚ùå Invalid input. Please enter a number.")

def delete_contact(contacts):
    view_contacts(contacts)
    try:
        idx = int(input("Enter the number of the contact to delete: ")) - 1
        if 0 <= idx < len(contacts):
            deleted = contacts.pop(idx)
            save_contacts(contacts)
            print(f"üóëÔ∏è Contact '{deleted['name']}' deleted.")
        else:
            print("‚ùå Invalid contact number.")
    except ValueError:
        print("‚ùå Invalid input. Please enter a number.")

def main():
    contacts = load_contacts()

    while True:
        print("\nüì± Contact Book Menu")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1‚Äì6): ")

        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            search_contact(contacts)
        elif choice == '4':
            update_contact(contacts)
        elif choice == '5':
            delete_contact(contacts)
        elif choice == '6':
            print("üëã Exiting Contact Book.")
            break
        else:
            print("‚ùå Invalid choice. Try again.")

if __name__ == "__main__":
    main()
