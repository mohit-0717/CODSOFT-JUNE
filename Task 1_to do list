import tkinter as tk
from tkinter import messagebox
import json
import os

TASKS_FILE = "tasks.json"

def load_tasks():
    if os.path.exists(TASKS_FILE):
        with open(TASKS_FILE, 'r') as file:
            try:
                return json.load(file)
            except json.JSONDecodeError:
                return []
    return []

def save_tasks(tasks):
    with open(TASKS_FILE, 'w') as file:
        json.dump(tasks, file, indent=4)

class ToDoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("üìù To-Do List")
        self.root.geometry("400x400")
        self.tasks = load_tasks()

        self.task_input = tk.Entry(root, width=30)
        self.task_input.pack(pady=10)

        self.add_btn = tk.Button(root, text="Add Task", command=self.add_task)
        self.add_btn.pack(pady=5)

        self.task_listbox = tk.Listbox(root, width=50)
        self.task_listbox.pack(pady=10)
        
        self.mark_done_btn = tk.Button(root, text="Mark as Complete", command=self.mark_complete)
        self.mark_done_btn.pack(pady=5)

        self.delete_btn = tk.Button(root, text="Delete Task", command=self.delete_task)
        self.delete_btn.pack(pady=5)

        self.update_listbox()

    def add_task(self):
        task = self.task_input.get()
        if task:
            self.tasks.append({"description": task, "status": "pending"})
            save_tasks(self.tasks)
            self.task_input.delete(0, tk.END)
            self.update_listbox()
        else:
            messagebox.showwarning("Input Error", "Please enter a task description.")

    def mark_complete(self):
        selected = self.task_listbox.curselection()
        if selected:
            index = selected[0]
            self.tasks[index]["status"] = "completed"
            save_tasks(self.tasks)
            self.update_listbox()
        else:
            messagebox.showwarning("Selection Error", "Please select a task to mark as complete.")

    def delete_task(self):
        selected = self.task_listbox.curselection()
        if selected:
            index = selected[0]
            del self.tasks[index]
            save_tasks(self.tasks)
            self.update_listbox()
        else:
            messagebox.showwarning("Selection Error", "Please select a task to delete.")

    def update_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            status = "‚úÖ" if task["status"] == "completed" else "‚è≥"
            self.task_listbox.insert(tk.END, f"[{status}] {task['description']}")

# Run the GUI
if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoApp(root)
    root.mainloop()
